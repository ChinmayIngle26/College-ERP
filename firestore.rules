
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =============================================================
    // Helper Functions
    // =============================================================
    function isStudent() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isFaculty() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty';
    }

    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return request.auth.token.email == 'admin@gmail.com' || userRole == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isSignedIn() {
        return request.auth != null;
    }

    // =============================================================
    // Collection Rules
    // =============================================================

    // Users Collection
    // ----------------
    match /users/{userId} {
      // READ: 
      // - Admins and Faculty can read any user's profile.
      // - Students can read their own profile.
      allow read: if isSignedIn() && (isAdmin() || isFaculty() || isOwner(userId));
      
      // CREATE: 
      // - Admins can create user documents (e.g., pre-registering a user).
      // - New users can create their own document during signup.
      allow create: if isSignedIn() && (isAdmin() || isOwner(userId));
      
      // UPDATE:
      // - Admins can update any user profile.
      // - Users can update THEIR OWN profile.
      allow update: if isSignedIn() && (isAdmin() || isOwner(userId));

      // DELETE:
      // - Only Admins can delete user profiles.
      allow delete: if isSignedIn() && isAdmin();
    }

    // Classrooms Collection
    // ---------------------
    match /classrooms/{classroomId} {
      // READ: 
      // - Admins and Faculty can read any classroom details.
      // - Students can read details of classrooms they are enrolled in.
      allow read: if isSignedIn() && (isAdmin() || isFaculty() || resource.data.students.exists(s, s.userId == request.auth.uid));

      // CREATE: 
      // - Only Faculty and Admins can create new classrooms.
      allow create: if isSignedIn() && (isFaculty() || isAdmin());
      
      // UPDATE:
      // - Only Admins and authorized Faculty (owner or invited) can update classroom details.
      allow update: if isSignedIn() && (isAdmin() || (isFaculty() && (resource.data.ownerFacultyId == request.auth.uid || request.auth.uid in resource.data.invitedFacultyIds)));
      
      // DELETE:
      // - Only the owner Faculty or an Admin can delete a classroom.
      allow delete: if isSignedIn() && (isAdmin() || (isFaculty() && resource.data.ownerFacultyId == request.auth.uid));

      // Messages Subcollection
      match /messages/{messageId} {
        // READ: 
        // - Allow read if user is an Admin, a Faculty, or an enrolled student.
        allow read: if isSignedIn() && (isAdmin() || isFaculty() || get(/databases/$(database)/documents/classrooms/$(classroomId)).data.students.exists(s, s.userId == request.auth.uid));

        // CREATE:
        // - Allow message creation if user is an Admin, a Faculty, or an enrolled student.
        allow create: if isSignedIn() && (isAdmin() || isFaculty() || get(/databases/$(database)/documents/classrooms/$(classroomId)).data.students.exists(s, s.userId == request.auth.uid));
        
        // No updates or deletes for chat messages to maintain history.
        allow update, delete: if false;
      }
    }

    // Grades Collection
    // -----------------
    match /grades/{gradeId} {
        // READ:
        // - Students can read their own grades.
        // - Faculty and Admins can read any grades.
        allow read: if isSignedIn() && (isOwner(resource.data.studentId) || isFaculty() || isAdmin());

        // CREATE, UPDATE:
        // - Only Faculty and Admins can create or update grades.
        allow create, update: if isSignedIn() && (isFaculty() || isAdmin());

        // DELETE:
        // - Only Faculty and Admins can delete grades.
        allow delete: if isSignedIn() && (isFaculty() || isAdmin());
    }

    // Lecture Attendance Collection
    // -----------------------------
    match /lectureAttendance/{attendanceId} {
        // READ:
        // - Students can read their own attendance records.
        // - Faculty and Admins can read any records.
        allow read: if isSignedIn() && (isOwner(resource.data.studentId) || isFaculty() || isAdmin());
        
        // CREATE, UPDATE, DELETE:
        // - Only Faculty and Admins can manage attendance records.
        allow create, update, delete: if isSignedIn() && (isFaculty() || isAdmin());
    }

    // Profile Change Requests Collection
    // ----------------------------------
    match /profileChangeRequests/{requestId} {
        // READ: 
        // - Admins can read all requests.
        // - Students can read their own requests.
        allow read: if isSignedIn() && (isAdmin() || isOwner(resource.data.userId));
        
        // CREATE:
        // - Students can create requests for themselves.
        allow create: if isSignedIn() && isStudent();
        
        // UPDATE:
        // - Only Admins can update requests (to approve/deny them).
        allow update: if isSignedIn() && isAdmin();
        
        // DELETE:
        // - Deny all deletes to keep a history of requests.
        allow delete: if false;
    }

    // System Settings Collection
    // --------------------------
    match /systemSettings/{configId} {
        // READ:
        // - Allow anyone to read system settings (e.g., for maintenance mode check, app name).
        allow read: if true;
        
        // WRITE:
        // - Only Admins can change system settings.
        allow write: if isSignedIn() && isAdmin();
    }
  }
}
